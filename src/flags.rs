use std::path::PathBuf;

xflags::xflags! {
    src "src/flags.rs"

    /// A commenting server that bridges static sites to ActivityPub sites.
    cmd pinka {
        /// Config file path
        required -c, --config PATH: PathBuf
        /// Launch the server with the specified server NAME.
        optional -s, --server NAME: String

        /// Run the server and start listen for HTTP requests.
        cmd serve run {}
    }
}

// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct Pinka {
    pub config: PathBuf,
    pub server: Option<String>,
    pub subcommand: PinkaCmd,
}

#[derive(Debug)]
pub enum PinkaCmd {
    Serve(Serve),
}

#[derive(Debug)]
pub struct Serve;

impl Pinka {
    #[allow(dead_code)]
    pub fn from_env_or_exit() -> Self {
        Self::from_env_or_exit_()
    }

    #[allow(dead_code)]
    pub fn from_env() -> xflags::Result<Self> {
        Self::from_env_()
    }

    #[allow(dead_code)]
    pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
        Self::from_vec_(args)
    }
}
// generated end
